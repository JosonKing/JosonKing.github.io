(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{364:function(e,t,n){"use strict";n.r(t);var r=n(42),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),n("p",[e._v("React Router 是完整的 React 路由解决方案")]),e._v(" "),n("p",[e._v("React Router 保持 UI 与 URL 同步。它拥有简单的 API 与强大的功能例如代码缓冲加载、动态路由匹配、以及建立正确的位置过渡处理。你第一个念头想到的应该是 URL，而不是事后再想起。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ npm install --save react-router\n")])])]),n("p",[e._v("使用一个支持 CommonJS 或 ES2015 的模块管理器，例如 webpack：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 使用 ES6 的转译器，如 babel\nimport { Router, Route, Link } from 'react-router'\n\n// 不使用 ES6 的转译器\nvar ReactRouter = require('react-router')\nvar Router = ReactRouter.Router\nvar Route = ReactRouter.Route\nvar Link = ReactRouter.Link\n")])])]),n("p",[e._v("实例")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('import React from \'react\'\nimport { Router, Route, Link } from \'react-router\'\n\nconst App = React.createClass({/*...*/})\nconst About = React.createClass({/*...*/})\n// 等等。\n\nconst Users = React.createClass({\n  render() {\n    return (\n      <div>\n        <h1>Users</h1>\n        <div className="master">\n          <ul>\n            {/* 在应用中用 Link 去链接路由 */}\n            {this.state.users.map(user => (\n              <li key={user.id}><Link to={`/user/${user.id}`}>{user.name}</Link></li>\n            ))}\n          </ul>\n        </div>\n        <div className="detail">\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n})\n\nconst User = React.createClass({\n  componentDidMount() {\n    this.setState({\n      // 路由应该通过有用的信息来呈现，例如 URL 的参数\n      user: findUserById(this.props.params.userId)\n    })\n  },\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.user.name}</h2>\n        {/* 等等。 */}\n      </div>\n    )\n  }\n})\n\n// 路由配置说明（你不用加载整个配置，\n// 只需加载一个你想要的根路由，\n// 也可以延迟加载这个配置）。\nReact.render((\n  <Router>\n    <Route path="/" component={App}>\n      <Route path="about" component={About}/>\n      <Route path="users" component={Users}>\n        <Route path="/user/:userId" component={User}/>\n      </Route>\n      <Route path="*" component={NoMatch}/>\n    </Route>\n  </Router>\n), document.body)\n')])])])])}),[],!1,null,null,null);t.default=a.exports}}]);